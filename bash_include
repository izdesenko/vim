# vim: syntax=sh
export EDITOR=vim
export XDEBUG_CONFIG="ide-key=vim"
export LESS=' -R ' # less without word wrapp
# export LESSOPEN="| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"

export PS1='\[\033[01;31m\]\u\[\033[01;33m\]@\[\033[01;00m\]\h \[\033[01;34m\]\w\[\033[01;35m\]$(__git_ps1 "(%s)")\$ \[\033[00m\]'
# umask 022

LESSCHARSET=UTF-8

# source ~/bin/git-completion.bash # Mac OS git-completion settings
# source /etc/bash_completion.d/git # Ubuntu git completion settings
source /etc/bash_completion.d/git-prompt # other Ubuntu git completion settings

gdc() {
	BRANCH=$1
	
	if [ ! "$BRANCH" ]
	then
		BRANCH=$(git rev-parse --abbrev-ref HEAD)
	fi
	git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative master..$BRANCH
}

gdon() {
	$(git diff origin/$1 --name-only)
}
gdo() {
	$(git diff origin/$@)
}
go() {
	BRANCH=$1
	
	if [ ! "$BRANCH" ]
	then
		BRANCH=$(git rev-parse --abbrev-ref HEAD)
	fi

	git pull origin $BRANCH
}

# push to current branch to all remotes
gop()  {
	BRANCH=$1
	
	if [ ! "$BRANCH" ]
	then
		BRANCH=$(git rev-parse --abbrev-ref HEAD)
	fi
	
	for R in $(git remote)
	do
		git push $R $BRANCH
	done
}

gim(){
	vim -p $(git status | grep 'both modified' | sed -e 's/#[[:space:]]both modified[:[:space:]]*//g' | xargs echo -n)
}

gbdiff () {
	BRANCH=$1
	
	if [ ! "$BRANCH" ]
	then
		BRANCH='master'
	fi
	
	DUMP_FILE="BRANCH_DIFF.TXT"
	
	if [ ! -f $DUMP_FILE ]
	then
		touch $DUMP_FILE
	fi

	STR=$(git diff origin/$BRANCH --name-only)
	echo "# vim: syntax=git" > $DUMP_FILE
	echo LIST:$'\n'"$STR"$'\n'$'\n' >> "$DUMP_FILE"
	IFS=$'\n'
	FILES=( $STR )

	for x in ${FILES[@]};
	do
		DIFF=$(git diff origin/$BRANCH $x 2> /dev/null)
		echo $x$'\n'"$DIFF"$'\n'$'\n'$'\n' >> "$DUMP_FILE"
	done
}

gdonw() {
	git diff origin/$1 --name-only -w
}
gdow()  {
	git diff -w origin/$@
}

gisre() {
	git -c color.ui=always -c color.status=always status | perl -lane "print pop @F if $1" | perl -wne 'chomp;print "$_ "'
}

alias grep="grep --color"
alias ll="ls -lAF"
alias gis="git -c color.ui=always -c color.status=always status"
alias giss="git -c color.ui=always -c color.status=always status | grep -v .min.js | grep -v .min.css "
alias gil="git log --stat --graph --pretty=short --abbrev-commit"
alias ga="git add "
alias gc='git commit --author="Ilya Z <iplugin@gmail.com>" -m '
alias gca='git commit --author="Ilya Z <iplugin@gmail.com>" --amend -m '
alias gd="git diff HEAD "
alias gab="git ls-remote | perl -ne '/\/([^\/]+\$)/; print \$1'"
alias gfo="git fetch origin"
alias control="cd ~/control2/days/; vim -p *.txt"

alias myptidy='perltidy -opt -ce -bar -bt=2 -pt=2 -bbt=2 -sbt=2 -dws -cti=1 '
alias apt_uppp='sudo apt-get update; sudo apt-get upgrade' 
alias dcc='drush cc all'
alias timestamp='date "+%s"'

control2(){
	d=`date +%Y-%m-%d`
	mkdir ~/control/days/$d
	~/control/scripts/create_files.pl
	cd ~/control/days/$d
	vim -p *.txt
}

alias mousetrick="x=0;y=0;while [[ $y -lt 500 ]] ; do xdotool mousemove --polar $x $y ; x=$(($x+3));y=$(($y+1)); sleep 0.001; done"


let_it_snow(){
	clear;while :;do echo $LINES $COLUMNS $(($RANDOM%$COLUMNS));sleep 0.1;done|gawk '{a[$3]=0;for(x in a) {o=a[x];a[x]=a[x]+1;printf "\033[%s;%sH ",o,x;printf "\033[%s;%sH*\033[0;0H",a[x],x;}}'
}

let_it_snow_big(){
	clear;while :;do echo $LINES $COLUMNS $(($RANDOM%$COLUMNS)) $(printf "\u2744\n");sleep 0.1;done|gawk '{a[$3]=0;for(x in a) {o=a[x];a[x]=a[x]+1;printf "\033[%s;%sH ",o,x;printf "\033[%s;%sH%s \033[0;0H",a[x],x,$4;}}'	
}

